# Generated by Django 4.0 on 2022-02-03 18:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0005_alter_user_is_activated_alter_user_registration_date_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='challenge name')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='date when challenge starts')),
                ('date_finish', models.DateTimeField(verbose_name='date when challenge finishes')),
                ('goal', models.CharField(max_length=200, verbose_name='what must be done')),
                ('description', models.CharField(max_length=500, verbose_name='challenge discription')),
                ('requirements', models.CharField(max_length=500, verbose_name='requirements for how challenge must be done')),
                ('video_example', models.FileField(blank=True, null=True, upload_to='video_examples', verbose_name='example of perform')),
                ('bet', models.PositiveIntegerField(default=0, verbose_name='amount coins for accept challenge')),
                ('total_bets_sum', models.PositiveIntegerField(default=0, verbose_name='total sum of all bets for this challenge')),
                ('is_active', models.BooleanField(default=True, verbose_name='is challenge active')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user', verbose_name='challenge creator')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challenge', verbose_name='challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user', verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_answer', models.FileField(upload_to='video_answer', verbose_name='video answer on chellange')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challenge', verbose_name='challenge')),
                ('challenge_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challengemember', verbose_name='challenge member')),
            ],
        ),
        migrations.CreateModel(
            name='ChallegeWinner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challenge', verbose_name='challenge')),
                ('challenge_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challengemember', verbose_name='challenge member')),
            ],
        ),
    ]
