# Generated by Django 4.0 on 2021-12-31 06:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('surname', models.CharField(max_length=30, verbose_name='surname')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('slug', models.SlugField(unique=True, verbose_name='field intends for useing in url')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='user email')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='how old is user')),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=10, null=True)),
                ('training_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='How long does user train in total')),
                ('trains_now', models.BooleanField(blank=True, null=True, verbose_name='Does user train now')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is user a member of staff?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is user a superuser?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is user active of his account was deleted?')),
                ('is_activated', models.BooleanField(default=False, verbose_name='Has user activated accoung?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('username',),
            },
        ),
    ]
